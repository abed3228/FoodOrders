@model FoodOrders.Models.OrderDetailsViewModel.OrderListViewModel

@{
    ViewData["Title"] = "OrderHistory";
}


@if (Model.Orders.Count > 0)
{
    double[] arrCount = new double[12];
    DateTime d = DateTime.Now;
    var year = d.Year.ToString();
    @foreach (var item in Model.Orders)
    {

        var yearItem = item.OrderHeader.OrderDate.Year.ToString();
        var monthItem = item.OrderHeader.OrderDate.Month.ToString();

        var status = item.OrderHeader.Status.ToString();
        if (status.CompareTo("Completed") == 0 && yearItem.CompareTo(year) == 0)
        {
            if (monthItem.CompareTo("1") == 0)
            {
                arrCount[0] += item.OrderHeader.OrderTotal;
            }
            else if (monthItem.CompareTo("2") == 0)
            {
                arrCount[1] += item.OrderHeader.OrderTotal;

            }
            else if (monthItem.CompareTo("3") == 0)
            {
                arrCount[2] += item.OrderHeader.OrderTotal;

            }
            else if (monthItem.CompareTo("4") == 0)
            {
                arrCount[3] += item.OrderHeader.OrderTotal;

            }
            else if (monthItem.CompareTo("5") == 0)
            {
                arrCount[4] += item.OrderHeader.OrderTotal;

            }
            else if (monthItem.CompareTo("6") == 0)
            {
                arrCount[5] += item.OrderHeader.OrderTotal;

            }
            else if (monthItem.CompareTo("7") == 0)
            {
                arrCount[6] += item.OrderHeader.OrderTotal;

            }
            else if (monthItem.CompareTo("8") == 0)
            {
                arrCount[7] += item.OrderHeader.OrderTotal;

            }
            else if (monthItem.CompareTo("9") == 0)
            {
                arrCount[8] += item.OrderHeader.OrderTotal;

            }
            else if (monthItem.CompareTo("10") == 0)
            {
                arrCount[9] += item.OrderHeader.OrderTotal;

            }
            else if (monthItem.CompareTo("11") == 0)
            {
                arrCount[10] += item.OrderHeader.OrderTotal;

            }
            else if (monthItem.CompareTo("12") == 0)
            {
                arrCount[11] += item.OrderHeader.OrderTotal;

            }
        }
    }
    <link rel="stylesheet" href="~/css/lastYear.css" />
    <script src="https://d3js.org/d3.v3.min.js" charset="utf-8"></script>
        <svg id="barChart"></svg>
        <script>

            var data = [
                {
                    Product: "Dec",
                    Count: @arrCount[11]
                }, {
                    Product: "Nov",
                    Count: @arrCount[10]
                }, {
                    Product: "Oct",
                    Count: @arrCount[9]
                }, {
                    Product: "Sep",
                    Count: @arrCount[8]
                }, {
                    Product: "Aug",
                    Count: @arrCount[7]
                }, {
                    Product: "Jul",
                    Count: @arrCount[6]
                },{
                    Product: "Jun",
                    Count: @arrCount[5]
                }, {
                    Product: "May",
                    Count: @arrCount[4]
                }, {
                    Product: "Apr",
                    Count: @arrCount[3]
                }, {
                    Product: "Mar",
                    Count: @arrCount[2]
                }, {
                    Product: "Feb",
                    Count: @arrCount[1]
                }, {
                    Product: "Jan",
                    Count: @arrCount[0]
                }];


            var margin = {
                top: 10,
                right: 10,
                bottom: 70,
                left: 100
            },
                width = 900 - margin.left - margin.right,
                height = 550 - margin.top - margin.bottom;


            var x = d3.scale.ordinal()
                .rangeRoundBands([width, 0], 0.1);

            var y = d3.scale.linear()
                .range([0, height]);

            var xAxis = d3.svg.axis()
                .scale(x)
                .orient("bottom");

            var yAxis = d3.svg.axis()
                .scale(y)
                .orient("left")
                .tickFormat(d3.format("d"))
                .tickSubdivide(0);


            var svg = d3.select("svg#barChart")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .append("g")
                .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

            x.domain(data.map(function (d) {
                return d.Product;
            }));

            y.domain([d3.max(data, function (d) {
                return d.Count;
            }), 0]);

            svg.append("g")
                .attr("class", "y axis")
                .attr("transform", "translate(0," + height + ")")
                .call(xAxis)
                .selectAll("text")
                .attr("transform", "rotate(90)")
                .attr("x", 0)
                .attr("y", -6)
                .attr("dx", ".6em")
                .style("text-anchor", "start");

            svg.append("g")
                .attr("class", "y axis")
                .call(yAxis);

            svg.selectAll(".bar")
                .data(data)
                .enter().append("rect")
                .attr("class", "bar")

                .attr("x", function (d) {
                    return x(d.Product);
                })
                .attr("width", x.rangeBand())
                .attr("y", function (d) {
                    return y(d.Count);
                })
                .attr("height", function (d) {
                    return height - y(d.Count);
                });

        </script>

}